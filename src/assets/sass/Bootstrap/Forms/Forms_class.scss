// partials
@import "../../partials/variables";
@import "../../partials/mixins";
@import "../../partials/classes";

// radio buttons & checkbox

.form-check-input {
  width: $form-check-input-width;
  height: $form-check-input-width;
  margin-top: ($line-height-base - $form-check-input-width) * 0.5; // line-height minus check height
  vertical-align: top;
  background-color: $form-check-input-bg;
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
  border: $form-check-input-border;
  appearance: none;
  color-adjust: exact; // Keep themed appearance for print
  @include transition($form-check-transition);

  &[type="checkbox"] {
    width: 18px;
    height: 18px;
    margin-top: ($line-height-base - $form-check-input-width - 0.1) * 0.5; // line-height minus check height
    @include border-radius($form-check-input-border-radius);
  }

  &[type="radio"] {
    width: 20px;
    height: 20px;
    margin-top: ($line-height-base - $form-check-input-width - 0.2) * 0.5; // line-height minus check height
    // stylelint-disable-next-line property-disallowed-list
    border-radius: $form-check-radio-border-radius;
  }

  &:active {
    filter: $form-check-input-active-filter;
  }

  &:focus {
    border-color: $primary__500;
    outline: 0;
    box-shadow: $form-check-input-focus-box-shadow;
  }

  &:checked {
    background-color: $form-check-input-checked-bg-color;
    // border-color: $form-check-input-checked-border-color;
    border-color: $primary__500;

    &[type="checkbox"] {
      background-color: $primary__500;
      @if $enable-gradients {
        background-image: escape-svg($form-check-input-checked-bg-image),
          var(--#{$variable-prefix}gradient);
      } @else {
        background-image: escape-svg($form-check-input-checked-bg-image);
      }
    }

    &[type="radio"] {
      background-color: white;
      @if $enable-gradients {
        background-image: escape-svg($form-check-radio-checked-bg-image),
          var(--#{$variable-prefix}gradient);
      } @else {
        background-image: escape-svg($form-check-radio-checked-bg-image);
      }
    }
  }

  &[type="checkbox"]:indeterminate {
    background-color: $form-check-input-indeterminate-bg-color;
    border-color: $form-check-input-indeterminate-border-color;

    @if $enable-gradients {
      background-image: escape-svg($form-check-input-indeterminate-bg-image),
        var(--#{$variable-prefix}gradient);
    } @else {
      background-image: escape-svg($form-check-input-indeterminate-bg-image);
    }
  }

  &:disabled {
    pointer-events: none;
    filter: none;
    opacity: $form-check-input-disabled-opacity;
  }

  // Use disabled attribute in addition of :disabled pseudo-class
  // See: https://github.com/twbs/bootstrap/issues/28247
  &[disabled],
  &:disabled {
    ~ .form-check-label {
      opacity: $form-check-label-disabled-opacity;
    }
  }
}

// switch buttons
.form-switch {
  padding: 0 !important;
  .form-wrapper {
    width: 50px;
    display: inline-block;
  }
  .form-check-input {
    height: 16.67px;
    border: none;
    background-color: $neutral__600;
    margin-top: ($line-height-base - $form-check-input-width) * 0.5; // line-height minus check height
    position: relative;
    display: block;
    cursor: pointer;
    &::after {
      content: "Hidden";
      position: absolute;
      right: -53.33px;
      top: -0.3px;
      color: $neutral__700;
      @extend ._sub__regular;
    }
    &:checked {
      background-color: $green__500 !important;
      position: relative;
      &::after {
        content: "Visible" !important;
        position: absolute !important;
        left: 41.33px;
        top: -0.3px;
        color: $neutral__700 !important;
        @extend ._sub__regular;
      }
    }

    &:focus {
      // box-shadow: none;
      // border-color: rgba(0, 0, 0, 0.125);
    }
  }
}

.test-check {
  &::after {
    content: "Hidden";
    position: absolute;
    // color: $neutral__700;
    // @extend ._sub__regular;
  }
}
